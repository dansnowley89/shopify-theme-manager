{"version":3,"file":"contentScript.e146a6aee304f08bef66.hot-update.js","mappings":";;;;;;;;;;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnJA","sources":["webpack://chrome-extension-boilerplate-react/./src/pages/Content/index.js","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["\n\nfunction checkIframeLoaded() {\n  console.log('test');\n\n  // Get a handle to the iframe element\n  var iframeContainer = document.getElementById('AppFrameMain');\n  console.log(iframeContainer);\n\n  const iframe = iframeContainer.querySelectorAll('iframe');\n\n  console.log('iframe');\n  console.log(iframe);\n\n  if (iframe.length === 1) {\n    console.log('\"___\"');\n\n    console.log(iframe);\n\n    // console.log(iframe);\n\n    console.log(iframe[0].contentDocument);\n    console.log(iframe[0].contentWindow.document);\n\n    const iframeDoc = iframe[0].contentWindow.document;\n\n    if (iframeDoc.readyState === 'complete') {\n      console.log('HERE!!!!!');\n\n      const themes = [];\n\n      let themeCount = 0;\n\n\n      // Listener for when '...' is clicked\n      const ddMenu = iframeDoc.querySelectorAll('[aria-label=\"Click for more theme actions\"]');\n      console.log('ddMenu>>>>>>');\n      console.log(ddMenu);\n\n\n      for (let i = 0; i < ddMenu.length; i++) {\n\n        // eslint-disable-next-line no-loop-func\n        ddMenu[i].addEventListener('click', () => {\n          setTimeout(() => {\n            const previewLink = iframeDoc.querySelectorAll('[aria-label=\"Preview (opens in a new window)\"]');\n\n            // TODO: Add to extension for when left and right mouse button(context menu) is clicked.\n            previewLink[0].addEventListener('click', (e) => {\n              addToExtension(e.currentTarget.getAttribute('href'), themeCount, themes);\n              themeCount++;\n            });\n\n            previewLink[0].addEventListener('contextmenu', (e) => {\n              addToExtension(e.currentTarget.getAttribute('href'), themeCount, themes);\n              themeCount++;\n            })\n\n          }, 500);\n        });\n\n      }\n\n      // Listener for customiser button click\n      // for (let i = 0; i < cards.length; i++) {\n\n      //   const buttons = cards[i].querySelectorAll('[class^=\"Polaris-Button\"]')\n\n      //   for (const button of buttons) {\n\n      //     if (button.nodeName === \"A\") {\n      //       console.log('button');\n      //       console.log(button);\n      //       // eslint-disable-next-line no-loop-func\n      //       button.addEventListener('click', (e) => {\n      //         e.preventDefault();\n      //         console.log('Clicked....');\n      //         console.log(e.target.innerText);\n      //         //Add customise link. \n      //         if (e.target.innerText === 'Customize') {\n\n      //           // Set theme\n      //           themes[themeCount] = {\n      //             previewLink: null,\n      //             customiserLink: e.target.getAttribute('href')\n      //           };\n\n      //           console.log(themes);\n\n      //           chrome.storage.local.set({ themes: themes }).then(() => {\n      //             console.log(\"Links set\");\n      //           });\n\n      //         }\n      //         themeCount++;\n      //       });\n      //     }\n      //   }\n\n      // };\n\n      return;\n    }\n\n    function addToExtension(theme, themeCount, themeArr) {\n\n      // TODO: Take the 'theme' var, take the preview theme id and assemble it to customiser url.\n\n      // Get currently locally stored themes.\n      chrome.storage.local.get([\"themes\"]).then((result) => {\n        themeArr[themeCount] = {\n          previewLink: theme,\n          // customiserLink: linksSelect[1].getAttribute('href')\n        };\n\n        let combinedThemeArray;\n\n        if (result.themes && themeCount === 0) {\n          combinedThemeArray = [...themeArr, ...result.themes];\n        } else {\n          combinedThemeArray = themeArr;\n        }\n\n        chrome.storage.local.set({ themes: combinedThemeArray }).then(() => {\n          console.log(\"Links set\");\n        });\n      });\n\n    }\n\n  }\n\n  // Keep checking unless found iframe\n  window.setTimeout(checkIframeLoaded, 5000);\n\n}\n\nfunction afterLoading() {\n  alert(\"I am here\");\n}\n\n\nwindow.addEventListener(\"load\", () => {\n  checkIframeLoaded();\n});\n\n\nconsole.log('here')","__webpack_require__.h = () => (\"7006d42b508bdb7c23e3\")"],"names":[],"sourceRoot":""}