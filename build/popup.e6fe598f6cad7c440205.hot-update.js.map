{"version":3,"file":"popup.e6fe598f6cad7c440205.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA","sources":["webpack://chrome-extension-boilerplate-react/./src/containers/ThemeList/ThemeList.jsx","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["import React, { Component } from 'react';\nimport ThemeItem from '../../containers/ThemeList/ThemeItem';\n\nclass ThemeList extends Component {\n\n  state = {\n    name: 'dev',\n    themes: []\n  };\n\n  getStoredThemes() {\n    chrome.storage.local.get([\"themes\"]).then((result) => {\n      console.log(result);\n\n      console.log(Object.keys(result).length);\n      // console.log(\"Value currently is \" + result.themes);\n\n      // console.log('getStoredthemes');\n      // console.log([...result.themes]);\n      let themes = [];\n\n      if (Object.keys(result).length > 0) {\n        themes = [...result.themes];\n      }\n\n      this.setState({\n        name: 'new name!',\n        themes: themes\n      });\n    });\n  }\n\n  clearStorage() {\n    chrome.storage.local.clear(function () {\n      var error = chrome.runtime.lastError;\n      if (error) {\n        console.error(error);\n      }\n    });\n    // chrome.storage.sync.clear(); // callback is optional\n  }\n\n  componentDidMount() {\n    this.getStoredThemes();\n\n    chrome.storage.onChanged.addListener((changes, namespace) => {\n      this.getStoredThemes();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <h1>{this.state.themes.length}</h1> Number of themes captured */}\n        <ul className=\"divide-y divide-gray-100\">\n          {this.state.themes.length > 0 && this.state.themes.map((itemData, i) => <ThemeItem key={i} itemData={itemData} />)}\n        </ul>\n\n        <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r mt-4\" onClick={this.clearStorage}>Clear Storage</button>\n      </div>\n    );\n  }\n}\n\nexport default ThemeList;\n","__webpack_require__.h = () => (\"af9aa4d958e9c023ee0f\")"],"names":[],"sourceRoot":""}