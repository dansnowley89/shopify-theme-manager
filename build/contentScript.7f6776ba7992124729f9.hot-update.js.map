{"version":3,"file":"contentScript.7f6776ba7992124729f9.hot-update.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AAEA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnHA","sources":["webpack://chrome-extension-boilerplate-react/./src/pages/Content/index.js","webpack://chrome-extension-boilerplate-react/webpack/runtime/getFullHash"],"sourcesContent":["// TODO:\n// Find a way to get name and Add name to recorded theme. \n// Add customiser links\n// Add message for AM/PMs\n// Options Page - 2 query selectors for dropdown menu & preview link (incase shopify should update these).\n\nfunction checkIframeLoaded() {\n  // Get a handle to the iframe element\n  var iframeContainer = document.getElementById('AppFrameMain');\n\n  const iframe = iframeContainer && iframeContainer.querySelectorAll('iframe');\n\n  if (iframe && iframe.length === 1) {\n    const iframeDoc = iframe[0].contentWindow.document;\n    console.log('READY');\n\n    // if (iframeDoc.readyState === 'complete') {\n    console.log('iframeDoc ready');\n\n    const themes = [];\n\n    let themeCount = 0;\n\n    // Listener for when '...' is clicked\n    const ddMenu = iframeDoc.querySelectorAll('[aria-label=\"Click for more theme actions\"]');\n\n    console.log('ddmenu');\n    console.log(ddMenu);\n\n    // Check that not just the first theme (published one) has loaded.\n    if (ddMenu && ddMenu.length > 1) {\n      console.log('in ddmenu');\n      for (let i = 0; i < ddMenu.length; i++) {\n        // eslint-disable-next-line no-loop-func\n        ddMenu[i].addEventListener('click', () => {\n          setTimeout(() => {\n            const previewLink = iframeDoc.querySelectorAll('[aria-label=\"Preview (opens in a new window)\"]');\n            const themeData = [];\n\n            // Get the heading based on the parent li of ddMenu h3.\n            const themeHeading = ddMenu[i].closest('li').querySelector('h3').innerText;\n\n            themeData.push(themeHeading);\n\n            // TODO: Add to extension for when left and right mouse button(context menu) is clicked.\n            previewLink[0].addEventListener('click', (e) => {\n              themeData.push(e.currentTarget.getAttribute('href'));\n              console.log('CLICK !!!!!');\n\n              addToExtension(themeData, themeCount, themes);\n              themeCount++;\n            });\n\n            previewLink[0].addEventListener('contextmenu', (e) => {\n              themeData.push(e.currentTarget.getAttribute('href'));\n              console.log('CONTEXT !!!!!');\n\n              addToExtension(themeData, themeCount, themes);\n              themeCount++;\n            })\n\n          }, 300);\n        });\n      }\n      return;\n    }\n    // }\n\n    function addToExtension(theme, themeCount, themeArr) {\n      // Get currently locally stored themes.\n      chrome.storage.local.get([\"themes\"]).then((result) => {\n        themeArr[themeCount] = {\n          themeHeading: theme[0],\n          previewLink: theme[1]\n          // TODO: Take the 'theme' var, take the preview theme id and assemble it to customiser url.\n          // customiserLink: linksSelect[1].getAttribute('href')\n        };\n\n        let combinedThemeArray;\n        let storedThemes = [];\n\n        if (result.themes) {\n          storedThemes = result.themes;\n        }\n\n        combinedThemeArray = [themeArr[themeCount], ...storedThemes];\n\n        chrome.storage.local.clear(function () {\n          var error = chrome.runtime.lastError;\n          if (error) {\n            console.error(error);\n          }\n          // Set storage after clearing existing.\n          chrome.storage.local.set({ themes: combinedThemeArray }).then(() => {\n            console.log(\"Links set\");\n          });\n\n        });\n        chrome.storage.sync.clear(); // callback is optional\n\n      });\n    }\n\n  }\n\n  // Keep checking unless found iframe\n  window.setTimeout(checkIframeLoaded, 500);\n\n}\n\nwindow.addEventListener(\"load\", () => {\n  checkIframeLoaded();\n});\n\n\nconsole.log('here')","__webpack_require__.h = () => (\"c11ffb1880d5bc85fbd1\")"],"names":[],"sourceRoot":""}